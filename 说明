1 服务器配置：
    cpu:4核
    内存:8G
    网络:100M
    硬盘:高速云盘
2 服务器环境配置：
    cron 定时任务，默认安装
        修改服务器时间，是正常时间
    lamp 环境 apt-get update, tasksel install lamp
        默认安装的版本：或者默认提供的 服务器
            apache:2.4.7
            php:5.5.9
            mysql:5.5.49
    第三方服务监控：
        
    shell 脚本编写：bash shell
        shell 脚本编写 请在 linux 环境下的编辑器进行，否则会添加多于字符，导致程序报错！

    此模型需要注意的地方：
        1 确认 cron 定时任务执行  service cron status
        2 确认 cron 定时任务 在固定时间执行 就是 秒杀开始时间
        3 在配置文件中 confing.js 中设置 对应的 秒杀开始时间
        4 有个小瑕疵，就是到时间需要用户 手动刷新页面 进行 新的页面切换
        5 如果使用自动刷新的话，容易造成 一个问题 就是 页面 时间不一致，可能造成 2-3秒的一个延迟！多次页面自动刷新
       
   服务器技术点：       
   level1、level2用户页面层采用CDN加速技术，确保全国各地用户几乎能同时访问页面，
   level3数据业务处理层采用负载均衡技术，保证高并发环境下的稳定性
      
  注意：高并发下的抢购活动环境部署最好和正常商城的环境分开来部署，防止灾难关联
  
  
################## 案例说明 ##########################################
1.level1页面展示层index.html是用户入口，根据不同的活动状态显示不同的页面状态
2.level2有个index.html接受来自level1的跳转,并且用js验证用户登录情况，没有登录就跳转到登陆页面然后将参数直接带到level3业务处理接口，
3.level3接受到参数就进行数据校验，如果活动结束就curl执行level2的set_file.php更改页面状态，否则进行redis有序集合数据校验和存储
4.将redis的数据存入mysql中
5.不同状态的页面切换，level1的具体执行是通过设置某一时刻定时任务执行shell脚本修改文件操作来实现的，而level2的是通过业务逻辑判断然后执行php的文件操作来实现的
###################################################################
